<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="style.css">
  <title>OnlyPogs: <%=pog.name%>
  </title>
</head>

<body>
  <h1>
    <%=pog.name%>
  </h1>

  <div class="center">
    <!-- <button id="editButton" onclick="edit()">Edit </button>
    <button id="cancelButton" onclick="cancel(event)" style="display: none;">Cancel</button> -->
    <!--Created the image of the pog on the pog page-->
    <a id="img" href="/pogTable">
      <img src="/pogs/<%=pog.name%>.png" alt="/pogs/<%=pog.name%>.png" width="200px" height="auto" id="pogPNG"
        onerror="this.src ='/pogs/<%=pog.name%>.png';unknown(); this.onerror = ' ' ">
    </a>


    <div id="infoBoxes">

      <!--Dropdown menu that displays the available colors of the currently selected pog-->
      <div class="infobox">
        <p class="infoheader"><label>Colors</label></p>
        <select id="Pogs" onchange="pogChange()" class="info">
          <%for (let Colors=0; Colors < pog.colors.length; Colors++) {%>
            <option value="<%= Colors %>">
              <%=pog.colors[Colors] %>
            </option>
            <%}%>
        </select>

        <input type="text" id="selectedColor" style="display: none;" class='info'></input>
        <p id="error"></p>
      </div>

      <!--Displays the amount produce of the current pog-->
      <div class="infobox">
        <p class="infoheader">Amount Produced </p>
        <p class="info" id="amount">
          <%= pog.amount %>
        </p>
      </div>
      <!--Displays the serial number of the current pog-->
      <div class="infobox">
        <p class="infoheader">Serial Number </p>
        <p class="info" id="serial">
          <%= pog.serial %>
        </p>
      </div>
      <!--Displays the tags of the current pog-->
      <div class="infobox">
        <p class="infoheader">Tags</p>
        <p class="info" id="tags">
          <%= pog.tags %>
        </p>
      </div>

      <!--Displays the Rarity of the current pog-->
      <div class="infobox">
        <p class="infoheader">Pog Rarity</p>
        <p class="info" id="rarityBox"></p>
      </div>
      <!--Displays the lore of the current pog-->
      <div class="infobox">
        <p class='infoheader'>Pog Lore</p>
        <p class='info' id="lore">
          <%= pog.lore %>
        </p>
      </div>
    </div>
  </div>


  <script>
    // var userPerm = 3;

    // if (userPerm < 3) {
    //   document.getElementById("editButton").style.display = "none";
    //   document.getElementById("cancelButton").style.display = "none";
    // }

    pog = JSON.parse(JSON.stringify("<%=pog.name%>")); // DO NOT TOUCH, WILL BREAK
    var pogImage = document.getElementById("Pogs");

    //A function that changes the pog image based on the currently selected pog
    function pogChange() {
      console.log(pogImage.value);
      if (pogImage.value == 0) {
        document.getElementById('error').innerText = ""
        let pogpng = document.getElementById("pogPNG")
        pogpng.src = `/pogs/${pog}.png`
      } else {
        let pogpng = document.getElementById("pogPNG")
        document.getElementById('error').innerText = ""
        pogpng.src = `/pogs/${pog}${pogImage.value}.png`
        pogpng.setAttribute('onerror', `this.src ='/pogs/${pog}.png'; unknown() ; this.onerror = ' '  `)
      }
    }

      var editMode = false
      var pogpng = document.getElementById("pogPNG");
      var originalImageSource = pogpng.src;
    


    function removeImage(event) {
      if (editMode) {
        event.preventDefault();
        const imageElement = document.getElementById("pogPNG");
        const originalImageSource = imageElement.src;
        imageElement.src = "/pogs/FillerPog.png";
      }
    }

    function handleUnknown() {
      const errorMessage = "Sorry, this pog/color does not exist.";
      document.getElementById('error').innerText = errorMessage;
      console.error(`Error: ${errorMessage}`);
    }

    var pogData = <%- JSON.stringify(pog) %>; // Do not beautify; remove spaces, if they appear on this line, will cause errors

    // total pog amount
    var totalPog = 1856.5

    //getting the pog percentage out of the total amount of pogs
    var pogPercent = pogData.amount / totalPog * 100
    pogPercent = pogPercent.toFixed(2)


    //setting rarities
    if (pogPercent >= 10) {
      document.getElementById('rarityBox').innerText = 'Common'
    } else if (pogPercent < 10 && pogPercent >= 3) {
      document.getElementById('rarityBox').innerText = 'Uncommon'
    } else if (pogPercent < 3 && pogPercent >= 1) {
      document.getElementById('rarityBox').innerText = 'Rare'
    } else if (pogPercent < 1 && pogPercent > 0.05) {
      document.getElementById('rarityBox').innerText = 'Epic'
    } else if (pogPercent <= 0.05) {
      document.getElementById('rarityBox').innerText = 'Legendary'
    } else {
      document.getElementById('rarityBox').innerText = 'N/A'
    }

    var originalData = {};

    // Define the blurListener function in the global scope
    var blurListener = function () {
      // Override the data of the currently selected dropdown menu segment
      var selectedColor = document.getElementById("selectedColor").value;
      var selectedIndex = document.getElementById("Pogs").selectedIndex;
      document.getElementById("Pogs").options[selectedIndex].text = selectedColor;
    };

    let pogImageValue = 0;
    // pogPNG.onclick = function () {
    //   window.location.href = "pogTable"
    // }

    // function edit() {
    //   if (userPerm > 2) {
    //     editMode = true;

    //     const infoElements = document.getElementsByClassName("info");

    //     for (let i = 0; i < infoElements.length; i++) {
    //       const element = infoElements[i];
    //       if (element.id === "rarityBox" || element.id === "selectedColor" || element.id === "Pogs") {
    //         element.setAttribute("contentEditable", "false");
    //       } else {
    //         originalData[element.id] = element.textContent;
    //         element.textContent = originalData[element.id];
    //         element.setAttribute("contentEditable", "true");
    //       }
    //     }

    //     const dropdownMenu = document.getElementById("Pogs");
    //     originalDropdownHTML = dropdownMenu.innerHTML;

    //     // Set selectedColor box value to the text of the first option
    //     const selectedColorElement = document.getElementById("Pogs");
    //     const selectedColor = selectedColorElement.options[selectedColorElement.selectedIndex].text;
    //     document.getElementById("selectedColor").value = selectedColor;

    //     document.getElementById("selectedColor").style.display = "block";

    //     const pogpng = document.getElementById("pogPNG");
    //     pogpng.onclick = function () {
    //       if (editMode) {
    //         // Replace the image with the FillerPog
    //         pogpng.src = "/pogs/FillerPog.png";
    //       } else {
    //         // Call pogChange function to handle image change
    //         pogChange();
    //         window.location.href = "/"
    //       }
    //     };

    //     document.getElementById("selectedColor").addEventListener("blur", blurListener);
    //     document.getElementById("cancelButton").style.display = "inline";
    //     document.getElementById("editButton").innerHTML = "Save";
    //     document.getElementById("editButton").onclick = save;
    //   }
    // }

    // Function to handle changing the pog image based on the selected pog and color
    // function pogChange() {
    //   if (userPerm > 2) {
    //     const pogImageValue = pogImage.value;

    //     document.getElementById('error').innerText = "";

    //     if (pogImageValue == 0) {
    //       pogpng.src = `/pogs/${pog}.png`;
    //     } else {
    //       pogpng.src = `/pogs/${pog}${pogImageValue}.png`;
    //       pogpng.setAttribute(
    //         'onerror',
    //         `this.src = '/pogs/${pog}.png'; handleUnknown(); this.onerror = ' ';`
    //       );
    //     }

    //     const selectedColorElement = document.getElementById("Pogs");
    //     const selectedColor = selectedColorElement.options[selectedColorElement.selectedIndex].text;

    //     if (selectedColor === "FillerPog") {
    //       pogpng.src = "/pogs/FillerPog.png";
    //     }

    //     document.getElementById("selectedColor").value = selectedColor;

    //     pogpng.onclick = removeImage;
    //   }
    // }

    // function cancel(event) {
    //   if (userPerm > 2) {
    //     editMode = false
    //     event.preventDefault();

    //     const infoElements = document.getElementsByClassName("info");
    //     for (let i = 0; i < infoElements.length; i++) {
    //       const element = infoElements[i];
    //       element.textContent = originalData[element.id] || element.textContent;
    //       element.setAttribute("contentEditable", "false");
    //     }

    //     const selectedColor = document.getElementById("selectedColor");
    //     selectedColor.removeEventListener("blur", blurListener);
    //     selectedColor.style.display = "none";

    //     const dropdownMenu = document.getElementById("Pogs");
    //     dropdownMenu.innerHTML = originalDropdownHTML;

    //     pogpng.src = originalImageSource || pogpng.src;

    //     document.getElementById("cancelButton").style.display = "none";
    //     const editButton = document.getElementById("editButton");
    //     editButton.innerHTML = "Edit";
    //     editButton.onclick = edit;
    //   }

    //   for (const key in pog) {
    //     if (Object.hasOwnProperty.call(pog, key)) {
    //       const element = pog[key];
    //     }
    //   }
    // }

    // function save() {
    //   if (userPerm > 2) {
    //     // Get the values of amount, tags, and lore from the input fields
    //     var amountData = document.getElementById('amount').textContent.trim();
    //     var serialData = document.getElementById('serial').textContent.trim();
    //     var tagsData = document.getElementById('tags').textContent.trim();
    //     var loreData = document.getElementById('lore').textContent.trim();
    //     var colorData = Array.from(document.getElementById('Pogs').options).map(function (option) {
    //       return option.text;
    //     });

    //     // Check if any of the values are missing
    //     let missingData = '';

    //     if (!amountData) missingData += 'Amount, ';
    //     if (!serialData) missingData += 'Serial Number, ';
    //     if (!tagsData) missingData += 'Tags, ';
    //     if (!loreData) missingData += 'Lore, ';
    //     if (colorData.some(color => color === '')) missingData += 'Colors, ';

    //     if (missingData) {
    //       alert('Missing data: ' + missingData.slice(0, -2));
    //       return;
    //     }

    //     // Check if the tags value is valid
    //     const validTags = ['Class Pog', 'Student Created', 'Teacher Created', 'PokePogs'];
    //     if (!validTags.includes(tagsData)) {
    //       alert('Invalid tag');
    //       return;
    //     }
    //     var colorData = Array.from(document.getElementById('Pogs').options).map(function (option) {
    //       return option.text;
    //     });

    //     colorData = `{"colors":${JSON.stringify(colorData)}}`; // use JSON.stringify to convert the array into a JSON string

    //     console.log(colorData);

    //     console.log('About to send fetch request');
    //     console.log(amountData, serialData, tagsData, loreData, colorData, pogData.uid);
    //     fetch('/savePog', {
    //       method: 'POST',
    //       headers: {
    //         'Content-Type': 'application/json'
    //       },
    //       body: JSON.stringify({
    //         color: colorData,
    //         amount: amountData,
    //         serial: serialData,
    //         tags: tagsData,
    //         lore: loreData,
    //         uid: pogData.uid
    //       })
    //     })
    //       .then(response => response.json())
    //       .catch((error) => {
    //         console.error('Error:', error);
    //       });
    //   }
    // };
  </script>
</body>

</html>